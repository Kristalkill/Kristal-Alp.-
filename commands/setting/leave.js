module.exports = {
  name: 'leave',
  description: '–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–∏–≤–∞.',
  aliases: ['leave'],
  public: false,
  async execute(Main, message, args) {
    Guild.findOne({guildID: message.guild.id}, (err, Data) => {
      const capitalize = i => {
        i = i.toString();
        return i[0].toUpperCase() + i.slice(1)
      }
      let LeaveHelpEmbed = new Discord.MessageEmbed()
      .setColor('RANDOM')
      .setTitle("**–ò—Å–ø–æ–ª—å–∑–∏–≤–∞–Ω–∏–µ –∏ –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è**")
      .addField("** **", '**–ò—Å–ø–æ–ª—å–∑–∏–≤–∞–Ω–∏–µ**')
      .addField('**–ò–∑–º–µ–Ω–µ–Ω–∏–µ –°—Ç–∞—Ç—É—Å–∞ -**',`**${Data.Moderation.prefix}leave status (on –∏–ª–∏ off)**`,true)
      .addField('**–ò–∑–º–µ–Ω–µ–Ω–∏–µ –ó–∞–≥–æ–ª–æ–≤–∫–∞ -**',`**${Data.Moderation.prefix}leave Title —Ç–µ–∫—Å—Ç**`,true)
      .addField('**–ò–∑–º–µ–Ω–µ–Ω–∏–µ –ó–∞–≥–æ–ª–æ–≤–∫–∞ -**',`**${Data.Moderation.prefix}leave Description —Ç–µ–∫—Å—Ç**`,true)
      .addField('**–ò–∑–º–µ–Ω–µ–Ω–∏–µ –ó–∞–≥–æ–ª–æ–≤–∫–∞ -**',`**${Data.Moderation.prefix}leave Channel —É–ø–æ–º–∏–Ω–∞–Ω–∏–µ –∫–∞–Ω–∞–ª–∞**`,true)
      .addField('**–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –≤—Å–µ–º -**',`**${Data.Moderation.prefix}}leave**`,true)
      .addField("** **", '**–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è**')
      .addField('**üï• –°—Ç–∞—Ç—É—Å**', capitalize(Data.Lmessage.status),true)
      .addField('**üìñ –ó–∞–≥–æ–ª–æ–≤–æ–∫**',Data.Lmessage.title || '–ù–µ—Ç—É',true)
      .addField('**üìí –û–ø–∏—Å–∞–Ω–∏–µ**', Data.Lmessage.description || '–ù–µ—Ç—É',true)
      .addField('**üìÅ –ö–∞–Ω–∞–ª**', Data.Lmessage.Channel ? `<#${Data.Lmessage.Channel}>` : '–ù–µ—Ç—É',true)
      .setThumbnail(message.guild.iconURL(({dynamic: true, size: 2048})))
      .setFooter(message.author.tag, message.author.displayAvatarURL({dynamic: true}));
      if (err) {
        console.log(err)
      }
      if (Data) {
        if (!args[0]) return message.reply(LeaveHelpEmbed)
        switch (args[0].toLowerCase()) {
          case 'status' || 'Status': {
            if (!args[1]) return message.reply('ON –ò–õ–ò FAlSE')
            switch (args[1].toLowerCase()) {
              case 'on': {
                if (Data.Lmessage.status == true) {
                  let ErrEmbedL1 = new Discord.MessageEmbed()
                  .setDescription(`–£–∂–µ –∏ —Ç–∞–∫ —Å—Ç–æ–∏—Ç On`)
                  .setImage(message.guild.iconURL());
                  message.channel.send(ErrEmbedL1)
                } else if (Data.Lmessage.status == false) {
                  Data.Lmessage.status = true
                  let LOnEmbed = new Discord.MessageEmbed()
                  .setDescription(`–£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ –≤—ã—Ö–æ–¥–µ –∏–∑ —Å–µ—Ä–≤–µ—Ä–∞ –≤–∫–ª—é—á–µ–Ω–æ –Ω–∞ **${message.guild.name}**`)
                  .setImage(message.guild.iconURL());
                  message.channel.send(LOnEmbed)
                  Data.save()
                }
                break
              }
              case 'off': {
                if (Data.Lmessage.status == false) {
                  let ErrEmbedL2 = new Discord.MessageEmbed()
                  .setDescription(`–£–∂–µ –∏ —Ç–∞–∫ —Å—Ç–æ–∏—Ç Off`)
                  .setImage(message.guild.iconURL());
                  message.channel.send(ErrEmbedL2)
                } else if (Data.Lmessage.status == true) {
                  Data.Lmessage.status = false
                  let LOffEmbed = new Discord.MessageEmbed()
                  .setDescription(`–£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ –≤—ã—Ö–æ–¥–µ –∏–∑ —Å–µ—Ä–≤–µ—Ä–∞ –≤—ã–∫–ª—é—á–µ–Ω–æ –Ω–∞ **${message.guild.name}**`)
                  .setImage(message.guild.iconURL());
                  message.channel.send(LOffEmbed)
                  Data.save()
                }
              }
            };
            break
          }
          case 'title' || 'Title': {
            if (!args[1]) return message.reply('–ù–ê–ü–ò–®–ò –ß–¢–û-–¢–û')
            Data.Lmessage.title = args.slice(1).join(' ')
            Data.save()
            LTitleEmbed = new Discord.MessageEmbed()
            .setTitle('–í—ã —É—Å–ø–µ—à–Ω–æ –∏–∑–º–µ–Ω–∏–ª–∏ –ó–∞–≥–æ–ª–æ–≤–æ–∫ —É—Ö–æ–¥—è—â–∏—Ö —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ –Ω–∞')
            .setDescription(`${Data.Lmessage.title}`)
            .setImage(message.guild.iconURL());
            message.channel.send(LTitleEmbed)
            break
          }
          case 'description' || 'Description': {
            if (!args[1]) return message.reply('–ù–ê–ü–ò–®–ò –ß–¢–û-–¢–û')
            Data.Lmessage.description = args.slice(1).join(' ')
            Data.save()
            DescriptionEmbed = new Discord.MessageEmbed()
            .setTitle(`–í—ã —É—Å–ø–µ—à–Ω–æ –∏–∑–º–µ–Ω–∏–ª–∏ –û–ø–∏—Å–∞–Ω–∏–µ —É—Ö–æ–¥—è—â–∏—Ö —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ –Ω–∞`)
            .setDescription(`${Data.Lmessage.description}`)
            .setImage(message.guild.iconURL());
            message.channel.send(DescriptionEmbed)
            break
          }
          case 'Channel' || 'Channel': {
            if (!message.mentions.channels.first()) return message.reply('–£–∫–∞–∂–∏ –∫–∞–Ω–∞–ª –¥—É—Ä–∞—á–æ–∫')
            Data.Lmessage.Channel = message.mentions.channels.first().id
            Data.save()
            ChannelEmbed = new Discord.MessageEmbed()
            .setTitle(`${`–í—ã —É—Å–ø–µ—à–Ω–æ –∏–∑–º–µ–Ω–∏–ª–∏ –∫–∞–Ω–∞–ª —É—Ö–æ–¥—è—â–∏—Ö —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ –Ω–∞`}\n${`<#${Data.Lmessage.Channel}>`}`)
            .setImage(message.guild.iconURL());
            message.channel.send(ChannelEmbed)
            break
          }
        }
      }
    })
  }
}
